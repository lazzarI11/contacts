{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import SpinnerLoader from \"../components/SpinnerLoader\"\nimport { contactService } from \"@/services/contactService\";\nexport default {\n  components: {\n    // SpinnerLoader\n  },\n  name: \"AddContact\",\n  data: function () {\n    return {\n      contact: {\n        name: '',\n        photo: '',\n        email: '',\n        mobile: '',\n        company: '',\n        title: '',\n        groupId: null\n      },\n      groups: [],\n      errorMessage: null,\n      loading: false\n    };\n  },\n  created: async function () {\n    try {\n      this.loading = true;\n      let response = await contactService.getAllGroups();\n      this.groups = response.data.data;\n      this.loading = false;\n    } catch (error) {\n      this.errorMessage = error;\n      this.loading = false;\n    }\n  },\n  methods: {\n    create: function () {\n      try {\n        const response = contactService.createContact(this.contact);\n        if (response) {\n          return this.$router.push(\"/\");\n        } else {\n          return this.$router.push(\"/contacts/add\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["contactService","components","name","data","contact","photo","email","mobile","company","title","groupId","groups","errorMessage","loading","created","response","getAllGroups","error","methods","create","createContact","$router","push","console","log"],"sources":["/home/asynch/Documents/contacts/src/views/AddContact.vue"],"sourcesContent":["<template>\n    <div class=\"container mt-3\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <p class=\"h3 text-success fw-bold\">Add Contact</p>\n                <p class=\"fst-italic\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Temporibus quibusdam eum ullam provident assumenda distinctio facere mollitia expedita, officiis esse corrupti ad magni doloremque! Consequuntur, tempore hic. Explicabo, fugit commodi.</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"container mt-3\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <form @submit.prevent=\"create()\">\n                    <div class=\"mb-2\">\n                        <input v-model=\"contact.name\" type=\"text\" class=\"form-control\" placeholder=\"Name\">\n                    </div>\n                    <div class=\"mb-2\">\n                        <input v-model=\"contact.photo\" type=\"text\" class=\"form-control\" placeholder=\"PhotoURL\">\n                    </div>\n                    <div class=\"mb-2\">\n                        <input v-model=\"contact.email\" type=\"email\" class=\"form-control\" placeholder=\"Email\">\n                    </div>\n                    <div class=\"mb-2\">\n                        <input v-model=\"contact.mobile\" type=\"number\" class=\"form-control\" placeholder=\"Mobile\">\n                    </div>\n                    <div class=\"mb-2\">\n                        <input v-model=\"contact.company\" type=\"text\" class=\"form-control\" placeholder=\"CompanyName\">\n                    </div>\n                    <div class=\"mb-2\">\n                        <input v-model=\"contact.title\" type=\"text\" class=\"form-control\" placeholder=\"Title\">\n                    </div>\n                    <div class=\"mb-2\">\n                        <select v-model=\"contact.groupId\" class=\"form-control\">\n                            <option value=\"\">Select Group</option>\n                            <option :value=\"group.id\" v-for=\"group of groups\" :key=\"group\">{{ group.name }}</option>\n                        </select>\n                    </div>\n                    <div class=\"mb-2\">\n                        <input type=\"submit\" class=\"btn btn-success\" value=\"Create\">\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-4\">\n                <img :src=\"contact.photo\" alt=\"\" class=\"contact-img\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n// import SpinnerLoader from \"../components/SpinnerLoader\"\nimport {contactService} from \"@/services/contactService\"\n    export default{\n        components: {\n            // SpinnerLoader\n        },\n        name: \"AddContact\",\n        data : function (){\n            return{\n                contact:{\n                    name:'',\n                    photo:'',\n                    email:'',\n                    mobile:'',\n                    company:'',\n                    title:'',\n                    groupId: null\n                },\n                groups:[],\n                errorMessage:null,\n                loading:false\n            }\n        },\n        created: async function (){\n            try{\n                this.loading = true;\n                let response = await contactService.getAllGroups();\n                this.groups = response.data.data\n                this.loading = false;\n            }\n            catch(error){\n                this.errorMessage = error\n                this.loading = false;\n            }\n        },\n        methods:{\n            create : function (){\n                try{\n                    const response = contactService.createContact(this.contact)\n                    if(response){\n                        return this.$router.push(\"/\")\n                    }\n                    else{\n                        return this.$router.push(\"/contacts/add\")\n                    }\n                }\n                catch(error){\n                    console.log(error)\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    \n</style>"],"mappings":";AAkDA;AACA,SAAQA,cAAc,QAAO,2BAA0B;AACnD,eAAc;EACVC,UAAU,EAAE;IACR;EAAA,CACH;EACDC,IAAI,EAAE,YAAY;EAClBC,IAAG,EAAI,SAAAA,CAAA,EAAW;IACd,OAAM;MACFC,OAAO,EAAC;QACJF,IAAI,EAAC,EAAE;QACPG,KAAK,EAAC,EAAE;QACRC,KAAK,EAAC,EAAE;QACRC,MAAM,EAAC,EAAE;QACTC,OAAO,EAAC,EAAE;QACVC,KAAK,EAAC,EAAE;QACRC,OAAO,EAAE;MACb,CAAC;MACDC,MAAM,EAAC,EAAE;MACTC,YAAY,EAAC,IAAI;MACjBC,OAAO,EAAC;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE,eAAAA,CAAA,EAAiB;IACtB,IAAG;MACC,IAAI,CAACD,OAAM,GAAI,IAAI;MACnB,IAAIE,QAAO,GAAI,MAAMf,cAAc,CAACgB,YAAY,CAAC,CAAC;MAClD,IAAI,CAACL,MAAK,GAAII,QAAQ,CAACZ,IAAI,CAACA,IAAG;MAC/B,IAAI,CAACU,OAAM,GAAI,KAAK;IACxB,EACA,OAAMI,KAAK,EAAC;MACR,IAAI,CAACL,YAAW,GAAIK,KAAI;MACxB,IAAI,CAACJ,OAAM,GAAI,KAAK;IACxB;EACJ,CAAC;EACDK,OAAO,EAAC;IACJC,MAAK,EAAI,SAAAA,CAAA,EAAW;MAChB,IAAG;QACC,MAAMJ,QAAO,GAAIf,cAAc,CAACoB,aAAa,CAAC,IAAI,CAAChB,OAAO;QAC1D,IAAGW,QAAQ,EAAC;UACR,OAAO,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,GAAG;QAChC,OACI;UACA,OAAO,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,eAAe;QAC5C;MACJ,EACA,OAAML,KAAK,EAAC;QACRM,OAAO,CAACC,GAAG,CAACP,KAAK;MACrB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}